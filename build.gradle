// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        maven { 
            allowInsecureProtocol = true
            url "http://maven.aliyun.com/repository/jcenter"
        }
        maven { 
            allowInsecureProtocol = true
            url "http://maven.aliyun.com/repository/google"
        }
        maven { 
            allowInsecureProtocol = true
            url "http://maven.aliyun.com/repository/releases"
        }
        maven {
            allowInsecureProtocol = true
            url "http://maven.aliyun.com/repository/central"
        }
        maven { url 'https://www.jitpack.io' }
    }
    apply from: 'AndroidThirdParty/config.gradle'
    apply from: 'sdk_type_config.gradle'
    dependencies {
        classpath externalAndroidBuildGradlePlugin
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath 'com.github.kezong:fat-aar:1.3.8'
    }
    if (this.ext.is_source_debug) {
        apply from: "${this.ext.source_path}/config.gradle"
    }
}

allprojects {
    repositories {
         maven { 
            allowInsecureProtocol = true
            url "http://maven.aliyun.com/repository/jcenter"
        }
        maven { 
            allowInsecureProtocol = true
            url "http://maven.aliyun.com/repository/google"
        }
        maven { 
            allowInsecureProtocol = true
            url 'http://maven.aliyun.com/nexus/content/groups/public'
        }
        maven { url "https://maven.aliyun.com/repository/releases" }
        maven {
            allowInsecureProtocol = true
            url "http://maven.aliyun.com/repository/central"
        }
        maven { 
            allowInsecureProtocol = true
            url 'http://4thline.org/m2' 
        }
        if (this.ext.is_source_debug) {
            flatDir {
                dirs "${mediabox_root}/all_in_one/acps/all_aars"
            }
        }
        flatDir {
            dirs 'libs'
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
